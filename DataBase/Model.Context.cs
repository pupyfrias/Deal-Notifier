//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataBase
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WebScrapingEntities : DbContext
    {
        public WebScrapingEntities()
            : base("name=WebScrapingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BlackList> BlackList { get; set; }
        public virtual DbSet<SmartPhone> SmartPhone { get; set; }
    
        public virtual int SP_ADD(string nAME, Nullable<decimal> pRICE, string lINK, Nullable<int> cONDITION, string sHOP, string iMAGE)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var pRICEParameter = pRICE.HasValue ?
                new ObjectParameter("PRICE", pRICE) :
                new ObjectParameter("PRICE", typeof(decimal));
    
            var lINKParameter = lINK != null ?
                new ObjectParameter("LINK", lINK) :
                new ObjectParameter("LINK", typeof(string));
    
            var cONDITIONParameter = cONDITION.HasValue ?
                new ObjectParameter("CONDITION", cONDITION) :
                new ObjectParameter("CONDITION", typeof(int));
    
            var sHOPParameter = sHOP != null ?
                new ObjectParameter("SHOP", sHOP) :
                new ObjectParameter("SHOP", typeof(string));
    
            var iMAGEParameter = iMAGE != null ?
                new ObjectParameter("IMAGE", iMAGE) :
                new ObjectParameter("IMAGE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADD", nAMEParameter, pRICEParameter, lINKParameter, cONDITIONParameter, sHOPParameter, iMAGEParameter);
        }
    }
}
